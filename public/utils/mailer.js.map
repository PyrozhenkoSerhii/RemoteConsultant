{"version":3,"sources":["../../server/utils/mailer.js"],"names":["exports","createTestTransport","result","nodemailer","createTestAccount","err","account","logger","error","info","transport","createTransport","host","smtp","port","secure","auth","user","pass","from","headers","createGmailTransport","service","socketTimeout","config","get","process","env","MAIL_USER","verificationMessage","to","email","subject","text","username","_id","passwordResetMessage","hash"],"mappings":";;AAAA;;AAEA;;AACA;;;;AAGAA,OAAO,CAACC,mBAAR,GAA8B,UAAAC,MAAM;AAAA,SAAIC,oBAAWC,iBAAX,CAA6B,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACnF,QAAID,GAAJ,EAASE,gBAAOC,KAAP;;AAETD,oBAAOE,IAAP,CAAY,wDAAZ;;AAEA,QAAMC,SAAS,GAAGP,oBAAWQ,eAAX,CACd;AACIC,MAAAA,IAAI,EAAEN,OAAO,CAACO,IAAR,CAAaD,IADvB;AAEIE,MAAAA,IAAI,EAAER,OAAO,CAACO,IAAR,CAAaC,IAFvB;AAGIC,MAAAA,MAAM,EAAET,OAAO,CAACO,IAAR,CAAaE,MAHzB;AAIIC,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAEX,OAAO,CAACW,IADZ;AAEFC,QAAAA,IAAI,EAAEZ,OAAO,CAACY;AAFZ;AAJV,KADc,EAUd;AACIC,MAAAA,IAAI,EAAE,kCADV;AAEIC,MAAAA,OAAO,EAAE;AACL,4BAAoB;AADf;AAFb,KAVc,CAAlB;;AAkBAb,oBAAOE,IAAP,gGAAoGH,OAAO,CAACW,IAA5G;;AAEAf,IAAAA,MAAM,CAACQ,SAAD,CAAN;AACH,GA1BuC,CAAJ;AAAA,CAApC;;AA4BAV,OAAO,CAACqB,oBAAR,GAA+B,UAACnB,MAAD,EAAY;AACvC,MAAMQ,SAAS,GAAGP,oBAAWQ,eAAX,CACd;AACIW,IAAAA,OAAO,EAAE,OADb;AAEIV,IAAAA,IAAI,EAAE,gBAFV;AAGIE,IAAAA,IAAI,EAAE,GAHV;AAIIC,IAAAA,MAAM,EAAE,IAJZ;AAKIQ,IAAAA,aAAa,EAAE,IALnB;AAMIP,IAAAA,IAAI,EAAE;AACFC,MAAAA,IAAI,EAAEO,gBAAOC,GAAP,CAAW,aAAX,CADJ;AAEFP,MAAAA,IAAI,EAAEM,gBAAOC,GAAP,CAAW,iBAAX;AAFJ;AANV,GADc,EAYd;AACIN,IAAAA,IAAI,EAAE,6CADV;AAEIC,IAAAA,OAAO,EAAE;AACL,0BAAoB;AADf;AAFb,GAZc,CAAlB;;AAoBAb,kBAAOE,IAAP,uFAA2FiB,OAAO,CAACC,GAAR,CAAYC,SAAvG;;AAEA1B,EAAAA,MAAM,CAACQ,SAAD,CAAN;AACH,CAxBD;;AA2BAV,OAAO,CAAC6B,mBAAR,GAA8B,UAAAZ,IAAI;AAAA,SAAK;AACnCa,IAAAA,EAAE,EAAEb,IAAI,CAACc,KAD0B;AAEnCC,IAAAA,OAAO,EAAE,oBAF0B;AAGnCC,IAAAA,IAAI,EAAE,iBAAUhB,IAAI,CAACiB,QAAf,qHACqCV,gBAAOC,GAAP,CAAW,yBAAX,CADrC,SAC6ER,IAAI,CAACkB,GADlF;AAH6B,GAAL;AAAA,CAAlC;;AAOAnC,OAAO,CAACoC,oBAAR,GAA+B,UAACnB,IAAD,EAAOoB,IAAP;AAAA,SAAiB;AAC5CP,IAAAA,EAAE,EAAEb,IAAI,CAACc,KADmC;AAE5CC,IAAAA,OAAO,EAAE,gBAFmC;AAG5CC,IAAAA,IAAI,EAAE,iBAAUhB,IAAI,CAACiB,QAAf,wJACiFV,gBAAOC,GAAP,CAAW,wBAAX,CADjF,SACwHY,IADxH;AAHsC,GAAjB;AAAA,CAA/B","sourcesContent":["import nodemailer from 'nodemailer'\r\n\r\nimport logger from './logger'\r\nimport config from 'config'\r\n\r\n\r\nexports.createTestTransport = result => nodemailer.createTestAccount((err, account) => {\r\n    if (err) logger.error(`[Node mailer] Error occured while creating account`)\r\n\r\n    logger.info('[Node mailer] Mailer account was created successfully!')\r\n\r\n    const transport = nodemailer.createTransport(\r\n        {\r\n            host: account.smtp.host,\r\n            port: account.smtp.port,\r\n            secure: account.smtp.secure,\r\n            auth: {\r\n                user: account.user,\r\n                pass: account.pass\r\n            },\r\n        },\r\n        {\r\n            from: 'Serhii <Pirogenkoss85@gmail.com>',\r\n            headers: {\r\n                'X-Laziness-level': 1000\r\n            }\r\n        }\r\n    )\r\n\r\n    logger.info(`[Node mailer] Transport (for test only) was created successfully with following user ${account.user}!`)\r\n\r\n    result(transport)\r\n})\r\n\r\nexports.createGmailTransport = (result) => {\r\n    const transport = nodemailer.createTransport(\r\n        {\r\n            service: 'gmail',\r\n            host: 'smtp.gmail.com',\r\n            port: 465,\r\n            secure: true,\r\n            socketTimeout: 5000,\r\n            auth: {\r\n                user: config.get('mailer.user'),\r\n                pass: config.get('mailer.password')\r\n            }\r\n        },\r\n        {\r\n            from: 'Serhii Pyrozhenko <Pirogenkoss85@gmail.com>',\r\n            headers: {\r\n                'X-Laziness-level': 1000\r\n            }\r\n        }\r\n    )\r\n\r\n    logger.info(`[Node mailer] Gmail transport was created successfully with following user: ${process.env.MAIL_USER}!`)\r\n\r\n    result(transport)\r\n}\r\n\r\n\r\nexports.verificationMessage = user => ({\r\n    to: user.email,\r\n    subject: 'Email verification',\r\n    text: `Hello, ${user.username}! If it isn't you, just ignore the message. Otherwise, please, ` +\r\n        `verify your email by following link ${config.get('urls.emailVerifyingBase')}${user._id}!`\r\n})\r\n\r\nexports.passwordResetMessage = (user, hash) => ({\r\n    to: user.email,\r\n    subject: 'Password reset',\r\n    text: `Hello, ${user.username}! You've just sent a request to restore your password,` +\r\n        `if it isn't you, just ignore the message. Otherwise, please, use following link ${config.get('urls.passwordResetBase')}${hash}!`\r\n})\r\n"],"file":"mailer.js"}