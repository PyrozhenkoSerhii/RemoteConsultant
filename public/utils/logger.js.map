{"version":3,"sources":["../../server/utils/logger.js"],"names":["combine","format","enviroment","process","env","NODE_ENV","logger","timestamp","printf","info","level","message","transports","Console","silent","colorize","File","filename","config","get"],"mappings":";;;;;;;AAAA;;AAGA;;;;IAFQA,O,GAAYC,e,CAAZD,O;AAIR,IAAME,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAwB,KAA3C;AAGA,IAAIC,MAAM,GAAG,2BAAa;AACtBL,EAAAA,MAAM,EAAED,OAAO,CACXC,gBAAOM,SAAP,CAAiB;AAAEN,IAAAA,MAAM,EAAE;AAAV,GAAjB,CADW,EAEXA,gBAAOO,MAAP,CAAc,UAAAC,IAAI;AAAA,qBAAOA,IAAI,CAACF,SAAZ,cAAyBE,IAAI,CAACC,KAA9B,eAAwCD,IAAI,CAACE,OAA7C;AAAA,GAAlB,CAFW,CADO;AAKtBC,EAAAA,UAAU,EAAE,CACR,IAAIA,oBAAWC,OAAf,CAAuB;AACnBC,IAAAA,MAAM,EAAEZ,UAAU,KAAK,MADJ;AAEnBD,IAAAA,MAAM,EAAED,OAAO,CACXC,gBAAOc,QAAP,EADW,EAEXd,gBAAOM,SAAP,CAAiB;AAAEN,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAFW,EAGXA,gBAAOO,MAAP,CAAc,UAAAC,IAAI;AAAA,uBAAOA,IAAI,CAACF,SAAZ,cAAyBE,IAAI,CAACC,KAA9B,eAAwCD,IAAI,CAACE,OAA7C;AAAA,KAAlB,CAHW;AAFI,GAAvB,CADQ,EASR,IAAIC,oBAAWI,IAAf,CAAoB;AAChBC,IAAAA,QAAQ,EAAEC,gBAAOC,GAAP,CAAW,kBAAX,CADM;AAEhBT,IAAAA,KAAK,EAAE,MAFS;AAGhBI,IAAAA,MAAM,EAAEZ,UAAU,KAAK;AAHP,GAApB,CATQ,EAcR,IAAIU,oBAAWI,IAAf,CAAoB;AAChBC,IAAAA,QAAQ,EAAEC,gBAAOC,GAAP,CAAW,gBAAX,CADM;AAEhBT,IAAAA,KAAK,EAAE,OAFS;AAGhBI,IAAAA,MAAM,EAAEZ,UAAU,KAAK;AAHP,GAApB,CAdQ;AALU,CAAb,CAAb;eA4BeI,M","sourcesContent":["import { createLogger, format, transports } from 'winston'\r\nconst { combine } = format\r\n\r\nimport config from 'config'\r\n\r\nconst enviroment = process.env.NODE_ENV || 'dev'\r\n\r\n\r\nlet logger = createLogger({\r\n    format: combine(\r\n        format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss' }),\r\n        format.printf(info => `${info.timestamp} ${info.level}: ${info.message}`)\r\n    ),\r\n    transports: [\r\n        new transports.Console({\r\n            silent: enviroment === 'test',\r\n            format: combine(\r\n                format.colorize(),\r\n                format.timestamp({ format: 'HH:mm:ss' }),\r\n                format.printf(info => `${info.timestamp} ${info.level}: ${info.message}`)\r\n            )\r\n        }),\r\n        new transports.File({\r\n            filename: config.get('api.logs.warning'),\r\n            level: 'warn',\r\n            silent: enviroment === 'test'\r\n        }),\r\n        new transports.File({\r\n            filename: config.get('api.logs.error'),\r\n            level: 'error',\r\n            silent: enviroment === 'test'\r\n        })\r\n    ]\r\n});\r\n\r\n\r\nexport default logger"],"file":"logger.js"}