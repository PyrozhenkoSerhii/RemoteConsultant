{"version":3,"sources":["../../server/middlewares/errorHandler.js"],"names":["DUPLICATE_MONGO_ERROR","errorHandler","err","req","res","next","code","field","errmsg","split","substring","lastIndexOf","status","send","error","stack","includes","name","errors","logger"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,qBAAqB,GAAG,KAA9B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC1C,MAAIH,GAAG,CAACI,IAAJ,KAAaN,qBAAjB,EAAwC;AACpC,QAAIO,KAAK,GAAGL,GAAG,CAACM,MAAJ,CAAWC,KAAX,CAAiB,IAAjB,EAAuB,CAAvB,CAAZ;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACE,KAAN,CAAY,UAAZ,EAAwB,CAAxB,CAAR;AACAF,IAAAA,KAAK,GAAGA,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBH,KAAK,CAACI,WAAN,CAAkB,GAAlB,CAAnB,CAAR;AACA,WAAOP,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,iBAAUP,KAAV;AAAP,KAArB,CAAP;AACH,GALD,MAKO,IAAIL,GAAG,CAACa,KAAJ,CAAUC,QAAV,CAAmB,yBAAnB,CAAJ,EAAmD;AACtD,WAAOZ,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK;AAAP,KAArB,CAAP;AACH,GAFM,MAEA,IAAIZ,GAAG,CAACe,IAAJ,KAAa,iBAAjB,EAAoC;AACvC;AACA,WAAOb,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEZ,GAAG,CAACgB;AAAb,KAArB,CAAP;AACH,GAHM,MAGA;AACHC,oBAAOL,KAAP,CAAaZ,GAAG,CAACa,KAAjB;;AACA,WAAOX,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK;AAAP,KAArB,CAAP;AACH;AAEJ,CAhBD;;eAkBeb,Y","sourcesContent":["import logger from '../utils/logger'\r\n\r\nconst DUPLICATE_MONGO_ERROR = 11000\r\n\r\nconst errorHandler = (err, req, res, next) => {\r\n    if (err.code === DUPLICATE_MONGO_ERROR) {\r\n        let field = err.errmsg.split(\".$\")[1];\r\n        field = field.split(\" dup key\")[0];\r\n        field = field.substring(0, field.lastIndexOf(\"_\"));\r\n        return res.status(400).send({ error: `This ${field} already exists` })\r\n    } else if (err.stack.includes('Cast to ObjectId failed')) {\r\n        return res.status(400).send({ error: `Wrong id provided` })\r\n    } else if (err.name === 'ValidationError') {\r\n        // TODO: handle mongoose validation errors here\r\n        return res.status(400).send({ error: err.errors })\r\n    } else {\r\n        logger.error(err.stack);\r\n        return res.status(500).send({ error: `Error occured on the server. If you are owner, check the logs of the server` });\r\n    }\r\n\r\n}\r\n\r\nexport default errorHandler"],"file":"errorHandler.js"}