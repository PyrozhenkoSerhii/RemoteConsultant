{"version":3,"sources":["../../server/models/Consultant.js"],"names":["ConsultantSchema","Schema","email","type","String","lowercase","trim","index","unique","required","messages","match","regex","minLength","min","restrictions","maxlength","max","username","minlength","fullname","password","select","bcrypt","age","Number","matureAge","gender","enum","defaults","default","rating","bill","phone","info","image","images","customer","url","certificate","Types","ObjectId","ref","languages","Language","company","online","Boolean","chat","id","allowAudio","allowVideo","verified","completed","plugin","timestamps","pre","next","Company","findById","err","logger","error","consultants","pull","_id","save","saved","log","module","exports","mongoose","model"],"mappings":"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","sourcesContent":["import mongoose, { Schema } from 'mongoose'\r\nimport bcrypt from 'mongoose-bcrypt'\r\nimport timestamps from 'mongoose-timestamp'\r\nimport _pull from 'lodash/pull'\r\n\r\nimport messages from '../utils/validation/messages'\r\nimport defaults from '../utils/validation/defaults'\r\nimport regex from '../utils/validation/regex'\r\nimport { email, username, fullname, password, matureAge, url, rating, info } from '../utils/validation/range'\r\nimport logger from '../utils/logger'\r\n\r\nimport { Language } from './submodels/Language'\r\nimport Company from './Company'\r\n\r\n\r\nconst ConsultantSchema = new Schema({\r\n    email: {\r\n        type: String,\r\n        lowercase: true,\r\n        trim: true,\r\n        index: true,\r\n        unique: true,\r\n        required: [true, messages.required.email],\r\n        match: [regex.email, messages.match.email],\r\n        minLength: [email.min, messages.restrictions.email],\r\n        maxlength: [email.max, messages.restrictions.email]\r\n    },\r\n    username: {\r\n        type: String,\r\n        trim: true,\r\n        unique: true,\r\n        required: [true, messages.required.username],\r\n        minlength: [username.min, messages.restrictions.username],\r\n        maxlength: [username.max, messages.restrictions.username]\r\n    },\r\n    fullname: {\r\n        type: String,\r\n        trim: true,\r\n        required: [true, messages.required.fullname],\r\n        match: [regex.fullname, messages.match.fullname],\r\n        minlength: [fullname.min, messages.restrictions.fullname],\r\n        maxlength: [fullname.max, messages.restrictions.fullname]\r\n    },\r\n    password: {\r\n        type: String,\r\n        select: false,\r\n        bcrypt: true,\r\n        required: [true, messages.required.password],\r\n        match: [regex.password, messages.match.password],\r\n        minlength: [password.min, messages.restrictions.password],\r\n        maxlength: [password.max, messages.restrictions.password]\r\n    },\r\n    age: {\r\n        type: Number,\r\n        min: [matureAge.min, messages.restrictions.matureAge],\r\n        max: [matureAge.max, messages.restrictions.matureAge]\r\n    },\r\n    gender: {\r\n        type: String,\r\n        enum: defaults.gender.enum,\r\n        default: defaults.gender.default\r\n    },\r\n    rating: {\r\n        type: Number,\r\n        min: [rating.min, messages.restrictions.rating],\r\n        max: [rating.max, messages.restrictions.rating],\r\n        default: defaults.rating\r\n    },\r\n    bill: {\r\n        type: Number,\r\n        default: defaults.bill\r\n    },\r\n    phone: {\r\n        type: Number,\r\n        match: [regex.phone, messages.match.phone]\r\n    },\r\n    info: {\r\n        type: String,\r\n        trim: true,\r\n        maxlength: [info.max, messages.restrictions.info]\r\n    },\r\n    image: {\r\n        type: String,\r\n        default: defaults.images.customer,\r\n        match: [regex.url, messages.match.url],\r\n        minlength: [url.min, messages.restrictions.url],\r\n        maxlength: [url.max, messages.restrictions.url]\r\n    },\r\n    certificate: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Certificate'\r\n    },\r\n    languages: [Language],\r\n    company: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Company',\r\n        trim: true\r\n    },\r\n    online: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    chat: {\r\n        id: String,\r\n        allowAudio: {\r\n            type: Boolean,\r\n            default: true\r\n        },\r\n        allowVideo: {\r\n            type: Boolean,\r\n            default: true\r\n        }\r\n    },\r\n    verified: {\r\n        type: Boolean,\r\n        default: false\r\n    },\r\n    completed: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\n\r\nConsultantSchema.plugin(bcrypt)\r\nConsultantSchema.plugin(timestamps)\r\n\r\nConsultantSchema.pre('remove', next => {\r\n    Company.findById(this.company, (err, company) => {\r\n        if (err) logger.error(`Something went wrong while fetching company. \\n Method: consultant remove, cascade remove`)\r\n        if (!company) logger.error(`Company with title ${this.company} wasn't found. \\n Method: consultant remove, cascade remove`)\r\n\r\n        company.consultants.pull(this._id)\r\n\r\n        company.save((err, saved) => {\r\n            if (err) logger.error(`Something went wrong while updating company with title ${this.company} \\n Method: consultant remove, cascade remove`)\r\n            if (saved) logger.log(`Company updated \\n Method: consultant remove, cascade remove`)\r\n\r\n            return next()\r\n        })\r\n    })\r\n})\r\n\r\n\r\n\r\n\r\nmodule.exports = mongoose.model('Consultant', ConsultantSchema)"],"file":"Consultant.js"}