{"version":3,"sources":["../../server/models/Order.js"],"names":["OrderSchema","Schema","customer","type","Types","ObjectId","ref","required","messages","index","product","quantity","Number","min","restrictions","max","sum","consultant","plugin","timestamps","post","order","coefficients","sums","Consultant","findOneAndUpdate","username","$inc","bill","module","exports","mongoose","model"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;AAGA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ,CAAW;AAC3BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADb;AAENC,IAAAA,GAAG,EAAE,UAFC;AAGNC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOC,kBAASD,QAAT,CAAkBL,QAAzB,CAHJ;AAINO,IAAAA,KAAK,EAAE;AAJD,GADiB;AAO3BC,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADd;AAELC,IAAAA,GAAG,EAAE,SAFA;AAGLC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOC,kBAASD,QAAT,CAAkBG,OAAzB;AAHL,GAPkB;AAY3BC,EAAAA,QAAQ,EAAE;AACNR,IAAAA,IAAI,EAAES,MADA;AAENL,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOC,kBAASD,QAAT,CAAkBI,QAAzB,CAFJ;AAGNE,IAAAA,GAAG,EAAE,CAACF,gBAASE,GAAV,EAAeL,kBAASM,YAAT,CAAsBH,QAArC,CAHC;AAINI,IAAAA,GAAG,EAAE,CAACJ,gBAASI,GAAV,EAAeP,kBAASM,YAAT,CAAsBH,QAArC;AAJC,GAZiB;AAkB3BK,EAAAA,GAAG,EAAE;AACDb,IAAAA,IAAI,EAAES,MADL;AAEDL,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOC,kBAASD,QAAT,CAAkBS,GAAzB,CAFT;AAGDH,IAAAA,GAAG,EAAE,CAACG,WAAIH,GAAL,EAAUL,kBAASM,YAAT,CAAsBE,GAAhC,CAHJ;AAIDD,IAAAA,GAAG,EAAE,CAACC,WAAID,GAAL,EAAUP,kBAASM,YAAT,CAAsBE,GAAhC;AAJJ,GAlBsB;AAwB3BC,EAAAA,UAAU,EAAE;AAAE;AACVd,IAAAA,IAAI,EAAEF,iBAAOG,KAAP,CAAaC,QADX;AAERC,IAAAA,GAAG,EAAE,YAFG;AAGRC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAOC,kBAASD,QAAT,CAAkBU,UAAzB;AAHF;AAxBe,CAAX,CAApB;AA+BAjB,WAAW,CAACkB,MAAZ,CAAmBC,0BAAnB;AAGAnB,WAAW,CAACoB,IAAZ,CAAiB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAyB,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,2BAAUA,KAAV,CADN;;AAAA;AACfC,YAAAA,YADe;AAGfC,YAAAA,IAHe,GAGR,0BAASF,KAAK,CAACL,GAAf,EAAoBM,YAApB,CAHQ;AAKrB,mCAASC,IAAT,EAAe,UAACP,GAAD,EAAMC,UAAN,EAAqB;AAChCO,kCAAWC,gBAAX,CAA4B;AAAEC,gBAAAA,QAAQ,EAAET;AAAZ,eAA5B,EAAsD;AAAEU,gBAAAA,IAAI,EAAE;AAAEC,kBAAAA,IAAI,EAAEZ;AAAR;AAAR,eAAtD;AACH,aAFD;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;AAWAa,MAAM,CAACC,OAAP,GAAiBC,kBAASC,KAAT,CAAe,OAAf,EAAwBhC,WAAxB,CAAjB","sourcesContent":["import mongoose, { Schema } from 'mongoose'\r\nimport timestamps from 'mongoose-timestamp'\r\nimport _forEach from 'lodash/forEach'\r\n\r\nimport messages from '../utils/validation/messages'\r\nimport { quantity, sum } from '../utils/validation/range'\r\nimport { calculate, getValue } from '../utils/contribution/calculator'\r\n\r\nimport Consultant from './Consultant'\r\n\r\n\r\nconst OrderSchema = new Schema({\r\n    customer: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Customer',\r\n        required: [true, messages.required.customer],\r\n        index: true\r\n    },\r\n    product: {\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Product',\r\n        required: [true, messages.required.product]\r\n    },\r\n    quantity: {\r\n        type: Number,\r\n        required: [true, messages.required.quantity],\r\n        min: [quantity.min, messages.restrictions.quantity],\r\n        max: [quantity.max, messages.restrictions.quantity]\r\n    },\r\n    sum: {\r\n        type: Number,\r\n        required: [true, messages.required.sum],\r\n        min: [sum.min, messages.restrictions.sum],\r\n        max: [sum.max, messages.restrictions.sum]\r\n    },\r\n    consultant: { /* _id of the most useful consultant */\r\n        type: Schema.Types.ObjectId,\r\n        ref: 'Consultant',\r\n        required: [true, messages.required.consultant]\r\n    }\r\n})\r\n\r\nOrderSchema.plugin(timestamps)\r\n\r\n\r\nOrderSchema.post('save', async order => {\r\n    const coefficients = await calculate(order)\r\n\r\n    const sums = getValue(order.sum, coefficients)\r\n\r\n    _forEach(sums, (sum, consultant) => {\r\n        Consultant.findOneAndUpdate({ username: consultant }, { $inc: { bill: sum } })\r\n    })\r\n})\r\n\r\n\r\nmodule.exports = mongoose.model('Order', OrderSchema)"],"file":"Order.js"}