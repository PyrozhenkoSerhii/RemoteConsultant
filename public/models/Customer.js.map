{"version":3,"sources":["../../server/models/Customer.js"],"names":["UserSchema","Schema","email","type","String","lowercase","trim","index","unique","required","messages","match","regex","minLength","min","restrictions","maxlength","max","username","minlength","fullname","password","select","bcrypt","age","Number","gender","enum","default","image","images","customer","url","verified","Boolean","plugin","timestamps","module","exports","mongoose","model"],"mappings":"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","sourcesContent":["import mongoose, { Schema } from 'mongoose'\r\nimport bcrypt from 'mongoose-bcrypt'\r\nimport timestamps from 'mongoose-timestamp'\r\n\r\nimport regex from '../utils/validation/regex'\r\nimport messages from '../utils/validation/messages'\r\nimport { gender, images } from '../utils/validation/defaults'\r\nimport { email, username, password, age, url, fullname } from '../utils/validation/range'\r\n\r\n/**\r\n * Remove comments field for now\r\n * Don't forget to change Patch request after its returning\r\n */\r\n//import { Comment } from './submodels/Comment'\r\n\r\n\r\nconst UserSchema = new Schema({\r\n    email: {\r\n        type: String,\r\n        lowercase: true,\r\n        trim: true,\r\n        index: true,\r\n        unique: true,\r\n        required: [true, messages.required.email],\r\n        match: [regex.email, messages.match.email],\r\n        minLength: [email.min, messages.restrictions.email],\r\n        maxlength: [email.max, messages.restrictions.email]\r\n    },\r\n    username: {\r\n        type: String,\r\n        trim: true,\r\n        unique: true,\r\n        required: [true, messages.required.username],\r\n        minlength: [username.min, messages.restrictions.username],\r\n        maxlength: [username.max, messages.restrictions.username]\r\n    },\r\n    fullname: {\r\n        type: String,\r\n        trim: true,\r\n        match: [regex.fullname, messages.match.fullname],\r\n        minlength: [fullname.min, messages.restrictions.fullname],\r\n        maxlength: [fullname.max, messages.restrictions.fullname]\r\n    },\r\n    password: {\r\n        type: String,\r\n        select: false,\r\n        bcrypt: true,\r\n        required: [true, messages.required.password],\r\n        match: [regex.password, messages.match.password],\r\n        minlength: [password.min, messages.restrictions.password],\r\n        maxlength: [password.max, messages.restrictions.password]\r\n    },\r\n    age: {\r\n        type: Number,\r\n        min: [age.min, messages.restrictions.age],\r\n        max: [age.max, messages.restrictions.age]\r\n    },\r\n    gender: {\r\n        type: String,\r\n        enum: gender.enum,\r\n        default: gender.default\r\n    },\r\n    image: {\r\n        type: String,\r\n        default: images.customer,\r\n        match: [regex.url, messages.match.url],\r\n        minlength: [url.min, messages.restrictions.url],\r\n        maxlength: [url.max, messages.restrictions.url]\r\n    },\r\n    //comments: [Comment],\r\n    verified: {\r\n        type: Boolean,\r\n        default: false\r\n    }\r\n})\r\n\r\n\r\nUserSchema.plugin(bcrypt)\r\nUserSchema.plugin(timestamps)\r\n\r\n\r\nmodule.exports = mongoose.model('User', UserSchema)"],"file":"Customer.js"}