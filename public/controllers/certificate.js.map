{"version":3,"sources":["../../server/controllers/certificate.js"],"names":["router","express","Router","get","req","res","Certificate","find","query","certificates","status","send","data","isObjectId","findById","params","id","certificate","error","post","body","invalid","validateSync","save","saved","delete","remove","message","module","exports"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,iBAAQC,MAAR,EAAf;;AAGAF,MAAM,CAACG,GAAP,CAAW,oBAAX,EAAiC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAK,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPC,qBAAYC,IAAZ,CAAiBH,GAAG,CAACI,KAArB,CADO;;AAAA;AAC5BC,YAAAA,YAD4B;AAElCJ,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEH;AAAR,aAArB;;AAFkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;;AAAA;AAAA;AAAA;AAAA,IAAjC;AAMAT,MAAM,CAACG,GAAP,CAAW,uBAAX,EAAoCU,sBAApC,EAAgD;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAK,kBAAOT,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACvBC,qBAAYQ,QAAZ,CAAqBV,GAAG,CAACW,MAAJ,CAAWC,EAAhC,CADuB;;AAAA;AAC3CC,YAAAA,WAD2C;;AAAA,gBAE5CA,WAF4C;AAAA;AAAA;AAAA;;AAAA,8CAExBZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEO,cAAAA,KAAK;AAAP,aAArB,CAFwB;;AAAA;AAGjDb,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEK;AAAR,aAArB;;AAHiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;;AAAA;AAAA;AAAA;AAAA,IAAhD;AAOAjB,MAAM,CAACmB,IAAP,CAAY,eAAZ,EAA6B;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAK,kBAAOf,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBY,YAAAA,WADwB,GACV,IAAIX,oBAAJ,mBAAqBF,GAAG,CAACgB,IAAzB,EADU;AAGxBC,YAAAA,OAHwB,GAGdJ,WAAW,CAACK,YAAZ,EAHc;;AAAA,iBAI1BD,OAJ0B;AAAA;AAAA;AAAA;;AAAA,8CAIVhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEO,cAAAA,KAAK,EAAEG;AAAT,aAArB,CAJU;;AAAA;AAAA;AAAA,mBAMVJ,WAAW,CAACM,IAAZ,EANU;;AAAA;AAMxBC,YAAAA,KANwB;AAQ9BnB,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,IAAI,EAAEY;AAAR,aAArB;;AAR8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;;AAAA;AAAA;AAAA;AAAA,IAA7B;AAYAxB,MAAM,CAACyB,MAAP,CAAc,uBAAd,EAAuC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAK,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACdC,qBAAYQ,QAAZ,CAAqBV,GAAG,CAACW,MAAJ,CAAWC,EAAhC,CADc;;AAAA;AAClCC,YAAAA,WADkC;;AAAA,gBAEnCA,WAFmC;AAAA;AAAA;AAAA;;AAAA,8CAEfZ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEO,cAAAA,KAAK;AAAP,aAArB,CAFe;;AAAA;AAAA;AAAA,mBAIlCD,WAAW,CAACS,MAAZ,EAJkC;;AAAA;AAKxCrB,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEgB,cAAAA,OAAO;AAAT,aAArB;;AALwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;;AAAA;AAAA;AAAA;AAAA,IAAvC;AASAC,MAAM,CAACC,OAAP,GAAiB7B,MAAjB","sourcesContent":["import express from 'express'\r\nimport _assignIn from 'lodash/assignIn'\r\n\r\nimport Certificate from '../models/Certificate'\r\nimport wrap from '../middlewares/wrap'\r\nimport { isObjectId } from '../middlewares/validators'\r\n\r\nconst router = express.Router()\r\n\r\n\r\nrouter.get('/certificate/list/', wrap(async (req, res) => {\r\n    const certificates = await Certificate.find(req.query)\r\n    res.status(200).send({ data: certificates })\r\n}))\r\n\r\n\r\nrouter.get('/certificate/list/:id', isObjectId, wrap(async (req, res) => {\r\n    const certificate = await Certificate.findById(req.params.id)\r\n    if (!certificate) return res.status(400).send({ error: `Certificate Not Found` })\r\n    res.status(200).send({ data: certificate })\r\n}))\r\n\r\n\r\nrouter.post('/certificate/', wrap(async (req, res) => {\r\n    const certificate = new Certificate({ ...req.body })\r\n\r\n    const invalid = certificate.validateSync()\r\n    if (invalid) return res.status(400).send({ error: invalid })\r\n\r\n    const saved = await certificate.save()\r\n\r\n    res.status(201).send({ data: saved })\r\n}))\r\n\r\n\r\nrouter.delete('/certificate/list/:id', wrap(async (req, res) => {\r\n    const certificate = await Certificate.findById(req.params.id)\r\n    if (!certificate) return res.status(400).send({ error: `Certificate Not Found` })\r\n\r\n    await certificate.remove()\r\n    res.status(200).send({ message: `Certificate deleted` })\r\n}))\r\n\r\n\r\nmodule.exports = router"],"file":"certificate.js"}